{
  "meta": {
    "project": "AV Master Live Event Learning Game",
    "date": "2025-08-08",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "AV Master is an interactive web-based educational game designed to teach live event production concepts through realistic virtual equipment setup and connection challenges. Players learn audio, lighting, video, and set design by hands-on placement and cable connections in progressively complex levels.",
  "core_goals": [
    "Educate users on live event production equipment and connections through interactive gameplay.",
    "Provide a realistic and authentic simulation of AV equipment setups for audio, lighting, video, and stage design.",
    "Deliver instant visual and audio feedback to reinforce learning and correctness of equipment connections.",
    "Enable progressive level advancement, building user knowledge and complexity over multiple stages.",
    "Support an intuitive and accessible user interface for diverse users, including detailed equipment info and hints.",
    "Include debugging and validation tools to assist both users and developers in identifying and resolving issues.",
    "Persist game state locally to enable continuation and track progress across sessions."
  ],
  "key_features": [
    "Drag & Drop equipment placement with responsive canvas for easy stage setup.",
    "Dynamic SVG connection lines representing cables between equipment connectors with color-coded cable types.",
    "Real-time connection validation system providing immediate visual feedback and validation status.",
    "Interactive equipment settings and detailed information popups for user guidance and learning.",
    "Hints and help system offering general and detailed step-by-step guidance with scoring implications.",
    "Victory celebrations including confetti animations and sound effects upon successful level completion.",
    "Keyboard shortcuts for game controls, hint access, validation, debugging, and state management.",
    "Audio system featuring Web Audio API based sound effects and real-time frequency analysis for audio equipment testing.",
    "Level progression management unlocking new equipment and scenarios as users complete levels.",
    "Game state management using local storage to save/load user progress including scores and completed levels."
  ],
  "user_flow_summary": [
    "User selects a level from a level selection menu.",
    "User drags equipment from the toolbar onto the virtual stage canvas.",
    "User positions equipment as desired, with the ability to move placed items.",
    "User creates connections by clicking connector points and selecting appropriate cable types.",
    "The system validates the connections in real-time, providing visual feedback for errors or completeness.",
    "User can view equipment information popups by clicking question mark icons for detailed explanations.",
    "Users can request hints and detailed guidance via keyboard shortcuts, impacting score as applicable.",
    "Once all required connections are correctly made, the system detects level completion and plays victory animations and sounds.",
    "Game state is saved automatically allowing users to resume progress in subsequent sessions.",
    "Users can use debug tools through keyboard shortcuts to troubleshoot and validate connection logic if needed."
  ],
  "validation_criteria": [
    "All equipment placed on the stage should be draggable and repositionable.",
    "Every connection made between equipment must be validated according to level-specific rules.",
    "Visual feedback must clearly indicate invalid, missing, or correct connections using colors and animations.",
    "Hints and equipment info popups must be accessible and display accurate information.",
    "Keyboard shortcuts must trigger their respective actions including hints, validation, debugging, and game controls.",
    "Victory celebration animations and sounds should trigger only upon successful validation of the level setup.",
    "Local storage must correctly persist and retrieve game state data including progress and settings.",
    "Audio equipment testing features must process real-time audio input and analysis correctly in supported browsers.",
    "The responsive canvas must adapt to different screen sizes without clipping or overflow.",
    "Debug tools should provide detailed console output and visual highlights for connection issues as described."
  ],
  "code_summary": {
    "tech_stack": [
      "JavaScript",
      "HTML5",
      "CSS3",
      "Web Audio API",
      "SVG",
      "ES6 Modules",
      "Local Storage",
      "Font Awesome Icons"
    ],
    "features": [
      {
        "name": "Game Engine Core",
        "description": "Main game engine that handles game state, level management, equipment placement, and connection validation",
        "files": [
          "js/core/GameEngine.js"
        ]
      },
      {
        "name": "Audio System",
        "description": "Handles audio processing, real-time audio analysis, and sound effects for the game",
        "files": [
          "js/modules/AudioSystem.js"
        ]
      },
      {
        "name": "Level Data Management",
        "description": "Defines all game levels, equipment types, valid connections, and stage setups",
        "files": [
          "js/data/LevelData.js"
        ]
      },
      {
        "name": "Utility Functions",
        "description": "Helper functions for connector colors, ID generation, and common game utilities",
        "files": [
          "js/utils/Helpers.js"
        ]
      },
      {
        "name": "Game Initialization",
        "description": "Main entry point that initializes the game and sets up global event listeners",
        "files": [
          "js/main.js"
        ]
      },
      {
        "name": "Game UI and Styling",
        "description": "Complete CSS styling for the game interface, animations, and responsive design",
        "files": [
          "styles.css"
        ]
      },
      {
        "name": "Game HTML Structure",
        "description": "Main HTML file defining the game's structure and linking all JavaScript modules",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Equipment Drag and Drop",
        "description": "Allows players to drag equipment from toolbar to canvas and position them",
        "files": [
          "js/core/GameEngine.js"
        ]
      },
      {
        "name": "Connection System",
        "description": "Handles cable connections between equipment, validation, and visual feedback",
        "files": [
          "js/core/GameEngine.js",
          "js/data/LevelData.js"
        ]
      },
      {
        "name": "Level Progression",
        "description": "Manages level completion, unlocking new levels, and game progression",
        "files": [
          "js/core/GameEngine.js",
          "js/data/LevelData.js"
        ]
      },
      {
        "name": "Equipment Settings",
        "description": "Interactive settings popup for equipment with sliders, toggles, and select controls",
        "files": [
          "js/core/GameEngine.js"
        ]
      },
      {
        "name": "Equipment Information",
        "description": "Popup system showing detailed information about each piece of equipment",
        "files": [
          "js/core/GameEngine.js"
        ]
      },
      {
        "name": "Hints and Help System",
        "description": "Provides hints and detailed guidance for completing levels",
        "files": [
          "js/core/GameEngine.js"
        ]
      },
      {
        "name": "Victory Celebrations",
        "description": "Confetti animation and victory sound effects when completing levels",
        "files": [
          "js/core/GameEngine.js",
          "styles.css"
        ]
      },
      {
        "name": "Game State Management",
        "description": "Handles saving/loading game progress, scores, and completed levels",
        "files": [
          "js/core/GameEngine.js"
        ]
      },
      {
        "name": "Responsive Canvas",
        "description": "Adaptive canvas that fills available screen space without going off-screen",
        "files": [
          "js/core/GameEngine.js",
          "styles.css",
          "js/data/LevelData.js"
        ]
      },
      {
        "name": "Audio Equipment Testing",
        "description": "Real-time audio system testing with microphone input and frequency analysis",
        "files": [
          "js/modules/AudioSystem.js",
          "js/core/GameEngine.js"
        ]
      },
      {
        "name": "Connection Validation",
        "description": "Validates cable connections based on equipment types and connection rules",
        "files": [
          "js/core/GameEngine.js",
          "js/data/LevelData.js"
        ]
      },
      {
        "name": "Visual Feedback System",
        "description": "Provides visual feedback for connections, errors, and successful operations",
        "files": [
          "js/core/GameEngine.js",
          "styles.css"
        ]
      },
      {
        "name": "Debug Tools",
        "description": "Keyboard shortcuts and debugging tools for development and testing",
        "files": [
          "js/core/GameEngine.js"
        ]
      }
    ]
  }
}
